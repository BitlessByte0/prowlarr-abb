name: Build Docker Images

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  repository_dispatch:
    types: [docker-build-external]
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write  # Needed to commit cache files
  actions: write   # Needed to trigger repository_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [amd64, arm64]
        tag_config:
          - tag_name: latest
            branch_arg: master
          - tag_name: develop  
            branch_arg: develop
        include:
          - architecture: amd64
            dockerfile: Dockerfile
            platform: linux/amd64
          - architecture: arm64
            dockerfile: Dockerfile.aarch64
            platform: linux/arm64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check if should build this config
      id: should-build
      run: |
        if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
          # For external repo triggers, only build matching branch
          EXTERNAL_BRANCH="${{ github.event.client_payload.branch }}"
          if [[ "$EXTERNAL_BRANCH" == "development" ]]; then
            EXTERNAL_BRANCH="develop"
          fi
          
          if [[ "$EXTERNAL_BRANCH" == "master" && "${{ matrix.tag_config.tag_name }}" == "latest" ]] ||
             [[ "$EXTERNAL_BRANCH" == "develop" && "${{ matrix.tag_config.tag_name }}" == "develop" ]]; then
            echo "should_build=true" >> $GITHUB_OUTPUT
          else
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi
        else
          # For regular pushes, build both configs
          echo "should_build=true" >> $GITHUB_OUTPUT
        fi

    - name: Set up Docker Buildx
      if: steps.should-build.outputs.should_build == 'true'
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: steps.should-build.outputs.should_build == 'true' && github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      if: steps.should-build.outputs.should_build == 'true'
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: bitlessbyte/prowlarr
        tags: |
          type=raw,value=${{ matrix.tag_config.tag_name }}-${{ matrix.architecture }}

    - name: Build and push Docker image
      if: steps.should-build.outputs.should_build == 'true'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ matrix.dockerfile }}
        platforms: ${{ matrix.platform }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BRANCH=${{ matrix.tag_config.branch_arg }}
        outputs: type=image,name=target
        cache-from: type=gha
        cache-to: type=gha,mode=max

  create-manifests:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        tag_name: [latest, develop]

    steps:
    - name: Check if should build this manifest
      id: should-build
      run: |
        if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
          # For external triggers, only build matching manifest
          EXTERNAL_BRANCH="${{ github.event.client_payload.branch }}"
          if [[ "$EXTERNAL_BRANCH" == "development" ]]; then
            EXTERNAL_BRANCH="develop"
          fi
          
          if [[ "$EXTERNAL_BRANCH" == "master" && "${{ matrix.tag_name }}" == "latest" ]] ||
             [[ "$EXTERNAL_BRANCH" == "develop" && "${{ matrix.tag_name }}" == "develop" ]]; then
            echo "should_build=true" >> $GITHUB_OUTPUT
          else
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi
        else
          # For regular pushes, build both manifests
          echo "should_build=true" >> $GITHUB_OUTPUT
        fi

    - name: Log in to Docker Hub
      if: steps.should-build.outputs.should_build == 'true'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Create and push multi-arch manifest
      if: steps.should-build.outputs.should_build == 'true'
      run: |
        IMAGE_NAME="bitlessbyte/prowlarr" 
        TAG_NAME="${{ matrix.tag_name }}"
        
        # Remove any existing manifest (ignore errors if it doesn't exist)
        docker manifest rm $IMAGE_NAME:$TAG_NAME || true
        
        # Create multi-arch manifest
        docker manifest create $IMAGE_NAME:$TAG_NAME \
          $IMAGE_NAME:$TAG_NAME-amd64 \
          $IMAGE_NAME:$TAG_NAME-arm64
        
        docker manifest push $IMAGE_NAME:$TAG_NAME
