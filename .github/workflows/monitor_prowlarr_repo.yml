name: Monitor External Repository

on:
  schedule:
    # Check once daily at 6:00 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  check-for-updates:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: [master, development]

    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4

      # Restore cache of last known commit
      - name: Restore commit cache
        id: cache
        uses: actions/cache@v3
        with:
          path: .commit-cache
          key: commit-${{ matrix.branch }}-${{ github.run_id }}
          restore-keys: |
            commit-${{ matrix.branch }}-

      - name: Get last known commit from cache
        id: last-commit
        run: |
          mkdir -p .commit-cache
          if [ -f ".commit-cache/last-${{ matrix.branch }}-commit.txt" ]; then
            echo "last_commit=$(cat .commit-cache/last-${{ matrix.branch }}-commit.txt)" >> $GITHUB_OUTPUT
          else
            echo "last_commit=" >> $GITHUB_OUTPUT
          fi

      - name: Get latest commit from external repo
        id: latest-commit
        run: |
          EXTERNAL_REPO="Prowlarr/Prowlarr"
          LATEST_COMMIT=$(curl -s \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$EXTERNAL_REPO/branches/${{ matrix.branch }}" | \
            jq -r '.commit.sha')
          echo "latest_commit=$LATEST_COMMIT" >> $GITHUB_OUTPUT

      - name: Check if there's a new commit
        id: check-update
        run: |
          if [ "${{ steps.last-commit.outputs.last_commit }}" != "${{ steps.latest-commit.outputs.latest_commit }}" ]; then
            echo "needs_build=true" >> $GITHUB_OUTPUT
            echo "New commit detected in ${{ matrix.branch }}: ${{ steps.latest-commit.outputs.latest_commit }}"
          else
            echo "needs_build=false" >> $GITHUB_OUTPUT
            echo "No new commits in ${{ matrix.branch }}"
          fi

      - name: Update last known commit
        if: steps.check-update.outputs.needs_build == 'true'
        run: |
          echo "${{ steps.latest-commit.outputs.latest_commit }}" > .commit-cache/last-${{ matrix.branch }}-commit.txt

      # Save updated cache
      - name: Save commit cache
        if: steps.check-update.outputs.needs_build == 'true'
        uses: actions/cache@v3
        with:
          path: .commit-cache
          key: commit-${{ matrix.branch }}-${{ github.run_id }}

      - name: Trigger Docker build
        if: steps.check-update.outputs.needs_build == 'true'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.ACTIONS_PAT }}
          repository: ${{ github.repository }}
          event-type: external-repo-update
          client-payload: '{"branch": "${{ matrix.branch }}", "external_commit": "${{ steps.latest-commit.outputs.latest_commit }}"}'
